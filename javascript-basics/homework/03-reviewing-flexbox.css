.container {
    height: 140px;
    padding: 16px;
    background: plum;
    border: 4px solid indigo;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
  }
  
  .item {
    width: 60px;
    height: 60px;
    border: 4px solid darkslategray;
    background: skyblue;
  }
  
  /* Adding flex: 1 to .item makes each of the items grow to fill the available space, but what if we wanted them to stay the same width, but distribute themselves differently inside the container? We can do this! */
  
  /* justify-content aligns items across the main axis. There are a few values that you can use here. Youâ€™ll learn the rest of them in the reading assignments, but for now try changing it to center, which should center the boxes along the main axis. */
  
  /* To change the placement of items along the cross axis use align-items. Try getting the boxes to the center of the container by adding align-items: center to .container. */
  
  /* Because justify-content and align-items are based on the main and cross axis of your container, their behavior changes when you change the flex-direction of a flex-container. For example, when you change flex-direction to column, justify-content aligns vertically and align-items aligns horizontally.  */
  
  /* One very useful feature of flex is the gap property. Setting gap on a flex container adds a specified space between flex items, similar to adding a margin to the items themselves. */
  